definitions:
  controllers.CreateListingRequest:
    properties:
      description:
        type: string
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  controllers.CreateListingResponse:
    properties:
      _id:
        type: string
      created_at:
        type: string
      description:
        type: string
      image_url:
        type: string
      owner_id:
        type: string
      owner_login:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  controllers.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  controllers.LogInRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  controllers.LogInResponse:
    properties:
      expresIn:
        type: integer
      token:
        type: string
    type: object
  controllers.SignUpRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  controllers.SignUpResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      login:
        type: string
    type: object
  models.Listing:
    properties:
      _id:
        type: string
      created_at:
        type: string
      description:
        maxLength: 5000
        minLength: 10
        type: string
      image_url:
        maxLength: 500
        type: string
      is_my_listing:
        type: boolean
      owner_id:
        type: string
      owner_login:
        type: string
      price:
        maximum: 1000000000
        minimum: 0
        type: number
      title:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - description
    - image_url
    - price
    - title
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.LogInRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.LogInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Log in endpoint
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Sign up endpoint
      tags:
      - auth
  /listings:
    get:
      consumes:
      - application/json
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        name: limit
        type: integer
      - description: 'Sort field: created_at or price'
        in: query
        name: sort_by
        type: string
      - description: 'Sort order: asc or desc'
        in: query
        name: order
        type: string
      - description: Minimum price filter
        in: query
        name: min_price
        type: number
      - description: Maximum price filter
        in: query
        name: max_price
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Listing'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get listings
      tags:
      - listing
    post:
      consumes:
      - application/json
      parameters:
      - description: Listing info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateListingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.CreateListingResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create listing endpoint
      tags:
      - listing
securityDefinitions:
  BearerAuth:
    description: '"Type ''Bearer {access_token}''"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
